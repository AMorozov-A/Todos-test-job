module.exports = {
    parser: '@typescript-eslint/parser',
    plugins: ['@typescript-eslint'],
    extends: [
      'plugin:@next/next/recommended',
      'plugin:@typescript-eslint/recommended',
      'plugin:react/recommended',
      'plugin:import/recommended',
      'plugin:import/typescript',
    ],
    parserOptions: {
      ecmaVersion: 11,
      sourceType: 'module',
      ecmaFeatures: {
        jsx: true,
      },
    },
    settings: {
      react: {
        version: 'detect',
      },
    },
    rules: {
      '@typescript-eslint/no-unused-vars': [
        2,
        {
          vars: 'all',
          args: 'after-used',
          varsIgnorePattern: '^jsx$',
          argsIgnorePattern: '[Ii]gnored$',
        },
      ],
      '@typescript-eslint/no-use-before-define': 'off',
      '@typescript-eslint/no-explicit-any': 'off',
      indent: ['error', 2],
      semi: ['error', 'never'],
      'object-curly-spacing': ['error', 'always'],
      'react/jsx-tag-spacing': [
        'error',
        {
          beforeSelfClosing: 'always',
          closingSlash: 'never',
          afterOpening: 'never',
          beforeClosing: 'never',
        },
      ],
      'react/jsx-max-props-per-line': [1, { maximum: 1 }],
      'react/jsx-closing-bracket-location': [1, { location: 'tag-aligned' }],
      'react/self-closing-comp': [
        'error',
        {
          component: true,
          html: true,
        },
      ],
      'react/jsx-wrap-multilines': [
        'error',
        {
          declaration: 'parens-new-line',
          assignment: 'parens-new-line',
          return: 'parens-new-line',
          arrow: 'parens-new-line',
          condition: 'parens-new-line',
          logical: 'parens-new-line',
          prop: 'parens-new-line',
        },
      ],
      'import/order': [
        'error',
        {
          groups: ['builtin', 'external', 'internal', 'parent', 'object'],
          pathGroups: [
            {
              pattern: 'react',
              group: 'external',
              position: 'before',
            },
            {
              pattern: '@/assets/**',
              group: 'object',
            },
            {
              pattern: '@/**',
              group: 'internal',
            },
          ],
          pathGroupsExcludedImportTypes: [''],
          'newlines-between': 'always',
        },
      ],
      'no-duplicate-imports': 'error',
      'import/no-unresolved': 'off',
      'import/prefer-default-export': 'off',
      'no-console': 'off',
      'no-shadow': 'off',
      'react/sort-comp': 'off',
      'react/display-name': 'off',
      'jsx-a11y/anchor-is-valid': 'off',
      'max-len': ['error', 240],
      'import/no-mutable-exports': 0,
      'comma-dangle': 'off',
      'jsx-a11y/click-events-have-key-events': 'off',
      'jsx-a11y/no-static-element-interactions': 'off',
      'jsx-a11y/no-noninteractive-element-interactions': 'off',
      'react/forbid-prop-types': 'off',
      'react/prop-types': 0,
      'react/jsx-filename-extension': 0,
      'react/prefer-stateless-function': 0,
      'react/react-in-jsx-scope': 0,
      'consistent-return': 'off',
      'no-return-assign': 'off',
      'react/no-array-index-key': 'off',
      'react/no-did-update-set-state': 'off',
      'no-nested-ternary': 'off',
      'react/no-danger': 'off',
      'jsx-a11y/anchor-has-content': 'off',
      'prefer-promise-reject-errors': 'off',
      'import/no-extraneous-dependencies': 'off',
      'import/no-named-as-default': 'off',
      '@typescript-eslint/member-delimiter-style': 'off',
      '@typescript-eslint/interface-name-prefix': 'off',
      '@typescript-eslint/explicit-function-return-type': 'off',
      '@typescript-eslint/no-var-requires': 'off',
      '@typescript-eslint/no-non-null-assertion': 'off',
      '@typescript-eslint/explicit-module-boundary-types': 'off',
      '@typescript-eslint/ban-ts-comment': 'off',
      'no-trailing-spaces': 'error',
      'react/jsx-newline': [2, { prevent: false }],
      'react/jsx-closing-tag-location': 2,
      'react/jsx-one-expression-per-line': 2,
      'space-infix-ops': ['error'],
      'arrow-spacing': ['error', { before: true, after: true }],
    },
  }